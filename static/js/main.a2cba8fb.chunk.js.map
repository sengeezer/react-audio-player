{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","playing","paused","stopped","trackProgress","trackDuration","trackVolume","trackSelected","title","url","tracks","artist","duration","handlePlayPause","bind","assertThisInitialized","handleTrackSelect","handleVolumeChange","handleSkip","nextProps","nextState","audioCurrentTime","_this2","player","document","querySelector","addEventListener","readyState","setState","currentTime","percent","style","flexBasis","concat","e","preventDefault","play","pause","trackSelectedIndex","currentTarget","dataset","index","trackSelectedMeta","target","value","volume","console","log","_this3","react_default","a","createElement","className","src","data-skip","onClick","toFixed","type","name","min","max","step","onChange","length","map","track","key","href","data-index","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2cba8fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      paused: false,\n      stopped: true,\n      trackProgress: 0,\n      trackDuration: 0,\n      trackVolume: 0.5,\n      trackSelected: {\n        title: 'Just a drill',\n        url: 'http://www.noiseaddicts.com/samples_1w72b820/3707.mp3'\n      },\n      tracks: [\n        {\n          title: 'I\\'m Sorry, Dave',\n          artist: '2001',\n          duration: 3.00,\n          url: 'http://www.noiseaddicts.com/samples_1w72b820/55.mp3'\n        },\n        {\n          title: 'Chad',\n          artist: 'National Anthem',\n          duration: 79.0,\n          url: 'http://www.noiseaddicts.com/samples_1w72b820/4040.mp3'\n        },\n        {\n          title: 'Estonia',\n          artist: 'National Anthem',\n          duration: 34.0,\n          url: 'http://www.noiseaddicts.com/samples_1w72b820/4186.mp3'\n        },\n        {\n          title: 'Guam',\n          artist: 'National Anthem',\n          duration: 46.0,\n          url: 'http://www.noiseaddicts.com/samples_1w72b820/4195.mp3'\n        },\n        {\n          title: 'Isle of Man',\n          artist: 'National Anthem',\n          duration: 37.0,\n          url: 'http://www.noiseaddicts.com/samples_1w72b820/4206.mp3'\n        }\n      ]\n    };\n\n    this.handlePlayPause = this.handlePlayPause.bind(this);\n    this.handleTrackSelect = this.handleTrackSelect.bind(this);\n    this.handleVolumeChange = this.handleVolumeChange.bind(this);\n    this.handleSkip = this.handleSkip.bind(this);\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n     return nextState.audioCurrentTime === this.state.audioCurrentTime;\n  }\n  componentDidMount() {\n    this.player = document.querySelector('.audio-player');\n\n    this.player.addEventListener('loadeddata', () => {\n      if (this.player.readyState >= 2) {\n        this.setState({\n          trackDuration: this.player.duration\n        });\n      }\n    });\n\n    this.player.addEventListener('timeupdate', () => {\n      this.setState({\n        trackProgress: this.player.currentTime\n      });\n      const percent = (this.player.currentTime / this.player.duration) * 100;\n      document.querySelector('.filled').style.flexBasis = `${percent}%`;\n    });\n\n    this.player.addEventListener('ended', () => {\n      this.setState({\n        stopped: true,\n        playing: false\n      });\n    });\n  }\n  handlePlayPause(e) {\n    e.preventDefault();\n\n    if (this.state.paused || this.state.stopped) {\n      this.player.play();\n      this.setState({\n        playing: true,\n        paused: false,\n        stopped: false\n      });\n    } else if (this.state.playing) {\n      this.player.pause();\n      this.setState({\n        playing: false,\n        paused: true,\n        stopped: false\n      });\n    }\n  }\n  handleTrackSelect(e) {\n    e.preventDefault();\n\n    const trackSelectedIndex = e.currentTarget.dataset.index || 0;\n    const trackSelectedMeta = this.state.tracks[trackSelectedIndex];\n\n    this.setState({\n      trackSelected: {\n        title: trackSelectedMeta.title,\n        url: trackSelectedMeta.url\n      }\n    });\n  }\n  handleVolumeChange(e) {\n    this.setState({\n      trackVolume: e.target.value\n    })\n\n    this.player.volume = this.state.trackVolume;\n  }\n  handleSkip() {\n    console.log('Not yet implemented.');\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"header\">\n          <h1>React music player</h1>\n        </header>\n        <main className=\"clearfix\">\n          <section className=\"player\">\n            <h3>Current track: {this.state.trackSelected.title}</h3>\n            <audio className=\"audio-player\" src={this.state.trackSelected.url}>\n              Your browser does not support the <code>audio</code> element.\n            </audio>\n            <div className=\"player-controls\">\n              <div className=\"progress\">\n                <div className=\"filled\"></div>\n              </div>\n              <button\n                data-skip=\"-10\"\n                className=\"player-button\"\n                onClick={this.handleSkip}\n              >«</button>\n              <button\n                className=\"player-button toggle\"\n                title=\"Play/Pause\"\n                onClick={this.handlePlayPause}\n              >{this.state.playing? '❚ ❚' : '►'}\n              </button>\n              <button\n                data-skip=\"25\"\n                className=\"player-button\"\n                onClick={this.handleSkip}\n              >»</button>\n              <span className=\"info-text\">\n                {(this.state.trackDuration - this.state.trackProgress).toFixed(2)}\n              </span>\n              <input\n                type=\"range\"\n                name=\"volume\"\n                className=\"player-slider\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.05\"\n                value={this.state.trackVolume}\n                onChange={this.handleVolumeChange}\n              />\n            </div>\n          </section>\n          <section>\n            <h2>Available Tracks</h2>\n            <ul className=\"playlist\">\n              { this.state.tracks.length === 0\n                ? <li>No tracks found</li>\n                : this.state.tracks.map((track, index) => (\n                  <a\n                    key={index}\n                    href={track.url}\n                    data-index={index}\n                    onClick={this.handleTrackSelect}\n                  >\n                    <li className={track.url === this.state.trackSelected.url ? 'item selected' : 'item'}>\n                      <strong>{track.title}</strong> by {track.artist}<br />\n                      <span className=\"small\">Duration: {track.duration}s</span>\n                    </li>\n                  </a>\n                  ))\n              }\n            </ul>\n          </section>\n        </main>\n        <footer>\n          &copy; FMA\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/styles.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}